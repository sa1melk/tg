from aiogram import Router, types, Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.methods.send_message import SendMessage
from aiogram.methods import SendMessage
from datetime import datetime, timedelta
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.filters import Filter
from utils.states import Form
from utils.states import AdminReplyState
import text
from aiogram.types import CallbackQuery
from aiogram import F
from config_reader import config
import random





bot=Bot(config.bot_token.get_secret_value())
router = Router()




# —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
user_last_request = {}

wishes = [
    "–ñ–µ–ª–∞–µ–º –≤–∞–º –æ—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è!",
    "–ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–¥–æ—Å—Ç—å!",
    "–°–µ–≥–æ–¥–Ω—è –≤–∞—Å –∂–¥—É—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏—è—Ç–Ω—ã–µ —Å—é—Ä–ø—Ä–∏–∑—ã!",
    "–ñ–µ–ª–∞—é —Å–µ–≥–æ–¥–Ω—è –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ, –≤–æ–ª—à–µ–±–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è",
    "–ù–∞—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å, –æ–Ω –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ —á—Ç–æ-—Ç–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ",
    "–ü—É—Å—Ç—å —Ö–æ—Ä–æ—à–∏–π, –¥–æ–±—Ä—ã–π, –≤–µ—Å–µ–ª—ã–π –¥–µ–Ω—å –∂–¥–µ—Ç —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è",
    "–ß—Ç–æ–±—ã —Ç–≤–æ–π –¥–µ–Ω—å —Å–µ–≥–æ–¥–Ω—è —Å –∫–∞–∂–¥—ã–º —á–∞—Å–æ–º —Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –≤—Å—ë –ª—É—á—à–µ",
    "–ü—É—Å—Ç—å –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–π –¥–µ–Ω—å –±—É–¥–µ—Ç —è—Ä–∫–∏–º, –ø–æ–ª–Ω—ã–º –ø—Ä–∏—è—Ç–Ω—ã—Ö —ç–º–æ—Ü–∏–π –∏ —Å–≤–µ—Ç–ª—ã—Ö –∏–¥–µ–π",
    "–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å —Ç–∞–∏—Ç –≤ —Å–µ–±–µ –∫–∞–∫—É—é-—Ç–æ –∏–∑—é–º–∏–Ω–∫—É",
    "–ü—É—Å—Ç—å –Ω–∞—Å—Ç—É–ø–∏–≤—à–∏–π –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —ç–º–æ—Ü–∏—è–º–∏ –∏ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º",
    "–û—Ç –¥—É—à–∏ –∂–µ–ª–∞—é –ø—Ä–∏—è—Ç–Ω–æ–≥–æ, —É—Å–ø–µ—à–Ω–æ–≥–æ –∏ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è",
    "–ñ–µ–ª–∞—é –æ–≥—Ä–æ–º–Ω–æ–π —É–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –≤ —Ü–µ–ª–æ–º —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è.",
    "–ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –æ–±–µ—Ä–Ω–µ—Ç—Å—è –±–µ–∑–∑–∞–±–æ—Ç–Ω—ã–º –≤–µ—Å–µ–ª—å–µ–º –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º —Å—á–∞—Å—Ç—å–µ–º",

    
]



@router.message(F.text.lower() == "–ø–æ–∂–µ–ª–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å")
async def send_wish(message: types.Message):
    user_id = message.from_user.id
    current_time = datetime.now()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è
    if user_id in user_last_request and (current_time - user_last_request[user_id]).days < 1:
        await message.answer("–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ—ë –ø–æ–∂–µ–ª–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞ :)")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–∂–µ–ª–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_last_request[user_id] = current_time

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
    wish = random.choice(wishes)
    await message.answer(wish)










@router.message(F.text.lower() == "üì®—Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º")
async def process_message(message: Message, state: FSMContext):
    await state.set_state(Form.txt)
    await message.answer(text.connection)

def generate_reply_markup(user_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f"reply_{user_id}")]
    ])
    


@router.message(Form.txt)
async def form_txt(message: Message, state: FSMContext, bot : Bot):
    await state.update_data(txt=message.text)
    await bot.send_message(
        config.ADMIN_CHAT_ID,
        f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {message.text}",
        reply_markup=generate_reply_markup(message.from_user.id)
    )
    await message.answer("–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ.")
    await state.clear()

@router.callback_query(F.data.startswith("reply_"))
async def process_reply_callback(callback_query: CallbackQuery, state: FSMContext):
    user_id = callback_query.data.split("_")[1]
    await state.set_state(AdminReplyState.waiting_for_reply)
    await state.update_data(reply_to_user_id=user_id)
    await bot.send_message(chat_id=config.ADMIN_CHAT_ID, text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:")




@router.message(AdminReplyState.waiting_for_reply)
async def send_reply_to_user(message: Message, state: FSMContext):
    data = await state.get_data()
    user_id = data['reply_to_user_id']
    await bot.send_message(chat_id=user_id, text=f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞: {message.text}")
    await bot.send_message(chat_id=config.ADMIN_CHAT_ID, text="–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    await state.clear()






@router.message()
async def echo(message: Message):
    msg = message.text.lower()

    if msg == 'üö´–æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∫–ª–∞–º—É':
       await message.answer(text.advertising)